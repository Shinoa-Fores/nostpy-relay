version: '3'
services:
  websocket_handler:
    build:
      context: .
      dockerfile: Dockerfile.websocket_handler
    environment:
      - DD_SERVICE=websocket_handler
      - DD_ENV=nostpy
      - DD_LOGS_INJECTION=true
      - DD_PROFILING_ENABLED=true
      - DD_RUNTIME_METRICS_ENABLED=true
      - DD_AGENT_HOST=datadog-agent
    networks:
      my_network:
        ipv4_address: 172.28.0.2

  event_handler:
    build:
      context: .
      dockerfile: Dockerfile.event_handler
    environment:
      - DD_SERVICE=event_handler
      - DD_AGENT_HOST=datadog-agent
      - DD_ENV=nostpy
      - DD_LOGS_INJECTION=true
      - DD_PROFILING_ENABLED=true
      - DD_RUNTIME_METRICS_ENABLED=true
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    networks:
      my_network:
        ipv4_address: 172.28.0.3
    depends_on:
      postgres:
        condition: service_healthy

  query_service:
    build:
      context: .
      dockerfile: Dockerfile.query_service
    environment:
      - DD_SERVICE=query_service
      - DD_AGENT_HOST=datadog-agent
      - DD_ENV=nostpy
      - DD_LOGS_INJECTION=true
      - DD_RUNTIME_METRICS_ENABLED=true
      - DD_PROFILING_ENABLED=true
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    networks:
      my_network:
        ipv4_address: 172.28.0.7
    depends_on:
      - event_handler


  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    networks:
      my_network:
        ipv4_address: 172.28.0.4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nostr"] # database username here - nostr, should be changed if other user
      interval: 10s
      timeout: 5s
      retries: 5

  datadog-agent:
    container_name: datadog-agent
    image: datadog/agent:latest
    environment:
      ## GLOBALS
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=datadoghq.com
      - DD_HOSTNAME=nostpy-test
      - DD_TAGS=env:nostr owner:brian service:nostpy
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_DOCKER_LABELS_AS_TAGS=true
      - DD_DOCKER_ENV_AS_TAGS=true
      - DD_SYSTEM_PROBE_ENABLED=true
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_AGENT_HOST=host.docker.internal
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_LOG_LEVEL=debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
      - /sys/kernel/debug:/sys/kernel/debug
    cap_add:
      - SYS_ADMIN
      - SYS_RESOURCE
      - SYS_PTRACE
      - NET_ADMIN
      - NET_BROADCAST
      - NET_RAW
      - IPC_LOCK
      - CHOWN
    security_opt:
      - apparmor:unconfined
    ports:
      - "8126:8126"
      - "8125:8125"
    networks:
      my_network:
        ipv4_address: 172.28.0.5

  redis:
    image: redis:latest
    container_name: redis-cache
    ports:
      - "6379:6379"
    networks:
      my_network:
        ipv4_address: 172.28.0.6

networks:
  my_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16


